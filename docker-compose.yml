services:
  
  # TimescaleDB (PostgreSQL with TimescaleDB extension)
  timescaledb:
    build:
      context: ./deployments/timescaledb
      dockerfile: Dockerfile
    container_name: binance-timescaledb
    restart: unless-stopped
    env_file:
      - deployments/timescaledb/.env
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./deployments/timescaledb/init-scripts:/docker-entrypoint-initdb.d:ro
      - ./sql/schemas:/sql/schemas:ro
      - ./sql/seeds:/sql/seeds:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # DragonflyDB for live data publishing (Redis-compatible)
  dragonfly:
    build:
      context: ./deployments/dragonfly
      dockerfile: Dockerfile
    container_name: binance-dragonfly
    restart: unless-stopped
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - dragonfly_data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3" 

  # Binance Live Data Collector Application
  app:
    build:
      context: ./deployments/app
      dockerfile: Dockerfile
      target: dev
    container_name: binance-app
    restart: unless-stopped
    depends_on:
      timescaledb:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    env_file:
      - deployments/app/.env
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3" 

volumes:
  timescaledb_data:
    driver: local
  dragonfly_data:
    driver: local

