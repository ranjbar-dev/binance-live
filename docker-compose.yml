services:
  # TimescaleDB (PostgreSQL with TimescaleDB extension)
  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: binance-timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./deployments/timescaledb/init-scripts:/docker-entrypoint-initdb.d:ro
      - ./sql/schemas:/sql/schemas:ro
      - ./sql/seeds:/sql/seeds:ro
    command: [
      "postgres",
      "-c", "max_connections=300",
    ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DragonflyDB for live data publishing (Redis-compatible)
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: binance-dragonfly
    restart: unless-stopped
    ulimits:
      memlock: -1
    command: >
      --requirepass=password
      --snapshot_cron="*/5 * * * *"
    ports:
      - "6379:6379"
    volumes:
      - dragonfly_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Binance Live Data Collector Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: binance-app
    restart: unless-stopped
    depends_on:
      timescaledb:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    environment:
      # Database configuration
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: data
      
      # DragonflyDB configuration (Redis-compatible)
      REDIS_HOST: dragonfly
      REDIS_PORT: 6379
      REDIS_PASSWORD: password
      
      # Application configuration
      APP_ENV: development
      LOG_LEVEL: info
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3" 

volumes:
  timescaledb_data:
    driver: local
  dragonfly_data:
    driver: local

